version: "3.3"
services:
  conserver:
    build: .
    command: bash -c "rm tasks.csv ; python ./main_loop.py"
    volumes:
      - .:/app
    # ports:
    #   - "${CONSERVER_EXTERNAL_PORT:-8000}:8000"
    depends_on:
      - redis
    env_file:
      - .env
  api:
    build: .
    command: bash -c "gunicorn api:app -k uvicorn.workers.UvicornWorker -b $HOST:$PORT"
    volumes:
      - .:/app
    ports:
      - "${CONSERVER_EXTERNAL_PORT:-8000}:8000"
    depends_on:
      - redis
    env_file:
      - .env

  redis:
    image: "redis/redis-stack:latest"
    ports:
      - "${REDIS_EXTERNAL_PORT:-8001}:8001"
    environment:
      REDIS_ARGS: --save 20 1
    mem_limit: 1gb # <===== IMPORTANT!!!! We're overriding this in the docker-compose.override.yml file
    volumes:
       - ./.data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 30s
      timeout: 10s
      retries: 5

  # mongo:
  #   image: mongo
  #   restart: always
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example
  #   profiles:
  #     - dev

  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #     ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
  #   profiles:
  #     - dev

  jupyter:
    build: .
    command: jupyter notebook --ip=0.0.0.0 --port=9999 --no-browser --allow-root
    volumes:
      - .:/app
    ports:
      - "9999:9999"
    depends_on:
      - redis
    env_file:
      - .env
    profiles:
      - dev
